#+setupfile:./hugo_setup.org
#+hugo_slug: text-editors
#+TITLE: Text Editors

Text editors control the way you interface with written content. For programmers, this is the vast majority of the content they create, develop, and perhaps consume.

* Work

- [[https://github.com/xi-editor/xi-editor][Xi]] :: is a flexible editor with a modular approach to construction; if you implement Xi's protocol, you can use any user interface that calls back to Xi on the backend. However, it's plagued with latency issues.
https://github.com/LightTable/LightTable
- [[https://github.com/hundredrabbits/Left][Left]] :: A simple, minimal writing tool without the distractions
- [[https://github.com/yi-editor/yi][Yi]] :: A modular collection of packages for creating your own text editor in Haskell.
- [[https://github.com/leo-editor/leo-editor][Leo]] :: Python-based personal information manager

* Etc

https://www.techradar.com/best/best-text-editors
https://github.com/LightTable/LightTable -- incredibly powerful editor
https://github.com/tree-sitter/tree-sitter parsing tool system

https://metaredux.com/posts/2018/11/09/ciders-orchard-the-heart.html cidet
interface, very cool livecoding environment

https://github.com/pitr/config_files mostly vim config
https://github.com/ianstormtaylor/slate :: customizable framework for building text editors
https://s.ai/nlws/ nonlinear writing system
https://www.maangchi.com/recipe/dubu-jorim a prototype code explorer!
http://www.sci.utah.edu/~nmccurdy/Poemage/ a visualization tool that helps users read
http://www.andrewbragdon.com/codebubbles_site.asp rethinking ui of IDES: 'codebubbles'
http://akkartik.name/about lots of links on ways to work on advancing program structure
https://pharo.org/ editor that's an 'IDE and OS rolled into one' with killer runtime code inspection
hemingway: a text editor that provides constant feedback on the semantic meaning and organization of your writing
- [[https://m.youtube.com/watch?feature=youtu.be&v=8htgAxJuK5c][Adding interactive visual syntax to textual code]] :: Leif Anderson of Northeastern defining syntax extensions to programming languages in order to directly manipulate problems with visual, concrete syntax as a GUI

https://nodes.io/
** live programming editor research
Excited to present our paper on "Example-Based Live Programming for Everyone" at Onward!/@splashcon! Together with our @HPI_DE students, we explored how language-agnostic tools for #LiveProgramming can be built with the #LSP and @GraalVM. ðŸ› ðŸš€

Preprint: https://t.co/JwKOdnDQrl https://t.co/EFIt78VFlQ

https://twitter.com/fniephaus/status/1316397053325565953

[[https://twitter.com/azlenelza/status/1331623011049500678][a text editor with speech and motion controls]]
https://hazel.org/: a live fp environment featuring type holes with a language built around filling them.

https://ash-k.itch.io/textreme an energetic text editor

** General Idea
- build to be language agnostic: use a plugin system to support other programs out of the box
- Abandon the file structure: we can do much more faster if we abandon files and use semantic structures relevant to the programming languages. We're building a data manipulation framework, and the plugins define the constraints for manipulating the data
- improve traversal and visualization of these data structures
