#+setupfile:./hugo_setup.org
#+hugo_slug: nix
#+TITLE: Nix

Nix is a functional package manager that isolates and sandboxes dependencies.

* Tools
[[https://github.com/elitak/nixos-infect][nixos-infect]]: install nixos over an existing os on digitalocean and other vps systems
* Tutorials
[[https://nixos.org/nixos/nix-pills/pr01.html][The de-facto introduction to NixOS]]
[[https://www.reddit.com/r/emacs/comments/hniz19/using_nix_to_manage_emacs_packages/][Using Nix to manage Emacs packages]] ([[file:emacs.org][Emacs]])
[[https://christine.website/blog/i-was-wrong-about-nix-2020-02-10][Why Nix: Cachix, niv and nix-build overview]]
[[https://spartanengineer.com/nixos/2017/09/25/basic-git-server-with-nixos.html][Set up a basic git server with NixOS]]
** NixOps
[[https://github.com/nh2/nixops-tutorial][nixops-tutorial]]: development with NixOps
[[https://hydra.nixos.org/build/115931128/download/1/manual/manual.html#idm140737322673584][Hydra (and nixops) manual]]
[[https://hydra.nixos.org/build/115931128/download/1/manual/manual.html#chap-introduction][nixops user guide]]
** MacOS
[[https://medium.com/@zw3rk/provisioning-a-nixos-server-from-macos-d36055afc4ad][Provisioning a Nix server from MacOS]]

* Configs
https://github.com/luke-clifton/nix-config has cool config
https://github.com/bjornfor/nixos-config
https://github.com/utdemir/dotfiles
https://blog.jcoglan.com/2017/09/19/the-patience-diff-algorithm/
https://github.com/bqv/nixrc
https://github.com/colemickens/nixcfg
https://github.com/archseer/nixos-fedora
https://github.com/andir/infra
https://github.com/bqv/nixrc
https://github.com/yegortimoshenko/yegortimoshenko-flake
https://github.com/Luis-Hebendanz/nix-configs
https://github.com/kalbasit/shabka
https://gitlab.com/rycee/configurations -- he has a working color scheme !
https://github.com/kylesferrazza/nix
https://github.com/boxdot/nixos-server
https://github.com/lovesegfault/nix-config
https://github.com/RaitoBezarius/nix-scripts/blob/master/autoinstall/justdoit.nix
https://github.com/gvolpe/nix-config/blob/master/home/ssh-key.nix
https://github.com/gvolpe/nix-config/blob/master/home/programs/git/default.nix
** Server
[[https://www.youtube.com/watch?v=0tsfQskVW18&app=desktop][nixos router for the homelab]] -- useful for learning to set everything up
[[https://www.linode.com/docs/tools-reference/custom-kernels-distros/install-nixos-on-linode/][installing and configuring nixos on linode]]

* ETC
[[http://fluffynukeit.com/installing-nixos/][installing nixos in vm]]
[[https://myme.no/posts/2020-01-26-nixos-for-development.html][nixos for developers]]
[[https://www.quora.com/What-is-it-like-to-use-NixOS-Linux-on-production?share=1#][using nixos in prod]]
[[https://medium.com/@jethroksy/a-year-with-nixos-113b534f446b][a year with nixos]]
[[https://www.codedbearder.com/posts/nixos-terramaster-f2-221/][nixos on a NAS]]
[[https://github.com/justinwoo/nix-shorts][short, readable notes on nix]]
[[https://myme.no/posts/2020-01-26-nixos-for-development.html][nixos for developers]]
[[https://nixos.org/nixos/manual/index.html#module-services-matrix][module services for nix]]

* Pro tips
- If the configuration isn't running properly after successfully refreshing it,
  you can use `nixos-rebuild boot` instead of `... refresh` to use the new configuration
  on the next boot but not enable it immediately. The `nixos-rebuild` utilities aside from `switch` all come in handy when fixing a broken configuration.
* Future configuration ideas
[[https://askubuntu.com/questions/95716/automatically-adjust-the-volume-based-on-content][Adjust system volume based on context]]
[[https://github.com/grahamc/nixos-config/tree/master/packages/recognize-thunderbolt][Thunderbolt system utility; investigate if any issues arise]]
[[https://github.com/gvolpe/nix-config/blob/master/home/programs/browsers/install-ext.nix][cool config trick for installing chrome extensions]]
Run programs in systemd cgroups (check out grahamc's config)

* Installation
** Good practices
- Create a separate partition for all of your nix derivations, /nix
- Label all of your disks so that `hardware-configuration.nix` is reproducible
** initial installation
worth noting that what i found the most confusing was:
- user configuration
- vps specific, ensuring that i could remove the virtual disk (not delete it)
and log in as an unprivileged user without booting to the installation disk

*** partition
partition for space for nixos
sudo fdisk /dev/sda
new
partition
sector1
no selection for start of partition
no selection for last sector
w to write to disk

sudo mkfs.ext4 -j -L nixos /dev/sda1

** nixos configuration
nixos-generate-config --root /mnt

edit /mnt/etc/nixos/configuration.nix

uncomment:
- localization for us
- terminal font and keymap
- timezone = America/NewYork (??)

UEFI systems:
You must set the option boot.loader.systemd-boot.enable to true. nixos-generate-config should do this automatically for new configurations when booted in UEFI mode.
look at options with boot.loader.efi and boot.loader.systemd as well.

boot.loader.grub.useOSProber can be set to true to add other OS to the grub
menu

entering nixos comes with a manual thing
sudo systemctl start sshd to start ssh daemon as needed
[[https://www.youtube.com/watch?v=uYZrbb78YzA&app=desktop][using nixos for declarative deployment and testing]]
[[https://opensource.builders/][oepn source alternatives for everything]]
[[http://thedarnedestthing.com/current%20configuration][cool selfhosting specs]]

** nix
https://ebzzry.io/en/nix/
https://www.reddit.com/r/NixOS/comments/g1rmby/building_a_web_app_with_functional_programming/
[[https://discourse.nixos.org/t/is-there-much-difference-between-using-nix-shell-and-docker-for-local-development/807][nix vs docker]]
[[https://blog.container-solutions.com/step-towards-future-configuration-infrastructure-management-nix][configuring infra in nix]]
[[https://github.com/kylesferrazza/nix/blob/master/README.md][nix!]]
https://nix.dev/ resources for learning nix to get things done
