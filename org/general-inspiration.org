#+TITLE: General Inspiration

Assorted inspiration for various topics.
This should all be better sorted when it is reviewed.

* ETC

[[https://ertdfgcvb.xyz/][inspirational site]]
[[https://constraint.systems/][creative image constraints]]

* web hostility

[[https://neustadt.fr/essays/against-a-user-hostile-web/][article]]
"Facebook is at odds with the open web that I love and defend..."
Netscape Navigator (small internet) -> big internet!
The modern web is being destroyed -- personalized content, growth hacking,
social media activation, CMS and user experience. These websites are not
built to appreciate the visitor -- they are constructed to make the user a
customer. Cookies bad! Small blogging good!

[[https://builtwithnix.org/][nix!]]
[[https://shouldiblockads.com/#ha][what is wrong with ads?]]
[[https://revealjs.com/#/][create stunning presentations on the web]]

[[https://svelte.dev/][autocreate websites. what.]]

[[https://amorphous.itch.io/][strange narrative games, good mono font]]
[[https://scuttlebutt.nz][scuttlebutt : the decentralized, social web.
localized but distribued.]]

* setting up weechat as frontend for everything

[[https://github.com/thefinn93/signal-weechat/blob/master/README.md][signal weechat]]
[[https://github.com/wee-slack/wee-slack][slack weechat]]

[[https://cineshader.com/][cellular noise]]

[[https://www.olivevideoeditor.org/][free video edition]]
also look into editing with blender

code as a creative medium :: MIT book

tildegit :: git for the tildeverse!

[[https://dev.upvote.blog/][seems like an organic place to spend time on the internet]]

* blogging for free

[[https://bearblog.dev/][bear blog]]
[[https://pluma.cloud/][pluma free blog]]
[[https://write.as/][focused writing place]]
[[http://txti.es/][convenient, fast web pages]]

[[https://telegra.ph/why-am-i-here-05-29][express yourself quickly]]
[[https://txt.fyi/+/22b9f246/][raw expression]]
[[https://txt.fyi/+/6ce898cf/][the cask ]]

[[https://txt.fyi/about/][quick publishing on the web.]]
[[https://txt.fyi/+/57688c94]][real shit]]
[[/#/][another one of these]]
[[http://ix.io/][kinda fire. more minimal and more obscure]]
[[https://commentpara.de/][anon we comments on any site]]
[[https://rwtxt.com/public][reading and text editor]]
[[https://write.as/][focused writing.]]
[[https://discourse.nixos.org/t/is-there-much-difference-between-using-nix-shell-and-docker-for-local-development/807][nix vs docker]]
[[https://blog.container-solutions.com/step-towards-future-configuration-infrastructure-management-nix][configuring infra in nix]]

[[https://gopher.tildeverse.org/tildeverse.org][tilde. in gopher.]]
[[https://pleroma.tilde.zone/main/all][federated social media is the future.]]
[[https://en.m.wikipedia.org/wiki/Duff%27s_device][compiler neat thing]]
[[https://dotdotdash.io/][collective.]]
[[https://moonscript.org/][moonscript: better lua programming!]]

* camera

buy fuji x t 2 !!
[[https://www.bestsevenreviews.com/fujifilm-xt2-review/][fuji best camers]]
[[https://online-go.com/][an excellent client for playing go]]

* Do I need to go to university?

[[http://colah.github.io/posts/2020-05-University/][article]]
it's hard to know who should take nontraditional paths, and many people are
looking for validation not to do so. realistically, this is the best option
for most people, both socially and academically.
Some questions:
- Do I have things that I deeply want to spend a year of my life exploring
  and working on?
- Do I have a way to support myself that leaves me time and energy to grow?
- Can I really work self-directed for months at a time? Do I have examples of
  me working hard on a personal project or learning without external
  structure?
- Do I have or can I learn the skills I need to work on this project
  independently?
- Do I have or can I learn the skills I need to work on this project
independently?
- Do I have sources of community, peer support or mentorship for what I want
  to do?

Those who leave university may be disparaging their efforts to make friends.
However, the ability to focus independently for an extended period of time
before heading to college is ideal for many people to flourish.

* Tools for Better Thinking

[[https://news.ycombinator.com/item?id=23339830][thread]]
The most underrated problem solving tool is to type out and explain your
thought process.
Start writing down questions to ask others; as you explain what you have
tried, you will begin to realize that there are more things left to try --
some of which being potential solutions.

Type your question into StackOverflow to submit; you'll be fearful of asking
the question.

Rank factors; always express factors as positive attributes. After generating
the table, the longest continuous line of check marks for each factor
determines the choice (though this can be gamed...)

State charts: easy to reason about state changes without the explosion of
state machines. These are hierarchical state machines, in a sense.

The Inversion Methods: The solution to many hard problems can be clarified by
re-expressing them in inverse form.

Crossline: structure your thoughts as you type and make cross-references.

[[https://fs.blog/mental-models/][mental models for making intelligent decisions]]

[[https://medium.com/disruptive-design/search?q=tools%20for%20systems%20thinkers][tools for systems thinkers]]
[[https://news.ycombinator.com/item?id=22747409][state machines for complex systmes]]
[[https://www.wiley.com/en-us/TRIZ+for+Engineers%3A+Enabling+Inventive+Problem+Solving-p-9780470741887][enabling inventive problem solving]]
[[https://en.m.wikipedia.org/wiki/TRIZ][analyzing and forecasting tool]]

[[https://untools.co/][tools for better thinking .]]

[[https://www.youtube.com/watch?v=de8Ak0nY1hA&app=desktop][improving compiler correctness using formal methods]]

* today's js

https://lea.verou.me/2020/05/todays-javascript-from-an-outsiders-perspective/
article
THe modern web is painful. Interfacing with js and node results in conflitts
between es and js versions, node incompatibilities, differnet import syntax
in different circumstances, etc. it's painful. How do you import with node?
without node? <script> tag or not to script? Where did the node modules go?
This is a good rant of questions and things to feature on the wbesite

* record of a living being

https://cinemasojourns.com/2020/03/29/akira-kurosawas-record-of-a-living-being/
source
watch the film :: one of the first to directly address the fear of nuclear
holocaust and the implications of the atom bomb.  an introspective, cerebral
work regarding japan after the bomb and moving forward, away from fallout.
inspired by conversations with otuers regarding what may -- or may not be --
in store for us tomorrow, if tomorrow is in store at all.

* anxiety in product development

https://andreschweighofer.com/agile/anxiety-in-product-development/
anxiety can emerge easily from stress, resulting in anger, frustration and
other unhealthy forms of exerting such stress. this impacts other people,
organizations and processes as well.
we have fear driven development : a concrete idea encouraging us to avoid
certain practices depending upon the specific approach

play to win, don't play not to lose; developing a unique selling proposition
means that you are no longer fighting with others, but rather striving to
come out ahead

awareness of such anxiety is the first step to take. with this awareness
comes conscious decision making, and with such decisions come wiser product
crafting and, in the end, better, more creative work

* bootstrappable builds

http://bootstrappable.org/
http://bootstrappable.org/projects.html good projects to work on
this is a general build philosophy addressing the chicken and egg problem --
to trust platforms, we must see how each part is produced from source, but we
do not have access to the source of compiled code when we run it against the
language they are compiling!
http://bootstrappable.org/ on trusting trust. ken thompson talk linked at the
bottom is great, as are the other articles. great compilers literature

* general ideas
** 50 ideas that changed my life

https://www.perell.com/blog/50-ideas-that-changed-my-life
inversion :: avoiding stupidity is easier and better than being brilliant
doublespeak :: saying the opposite of what one means
theory of constraints :: focus on the bottleneck, the weakest point of the
system, always.
preference falsification :: lying to conform to the most socially acceptable
opinion at the time
mimetic teory of desire: rather than having our own desires, we imitate the
desires of others and pursue their ideas
mimetic theory of conflict :: similar = fight

left off on 10!

* cool cs

https://github.com/browserdotsys/vecchio ray tracing in one weekend :: looks
fun to do
https://blog.benwiener.com/programming/2019/04/29/reinventing-the-wheel.html
discovering optimal rolling shape in pytorch!
https://zserge.com/posts/jvm/ how to write a toy jvm -- try this and put it
on github! fun small thing to mess around with. add more to it, add new
things, mess aroundand have fun!
https://www.cs.cmu.edu/~janh/courses/411/16/ compiler design course at cmu.
supposedly good material
https://gist.github.com/cellularmitosis/1f55f9679f064bcff02905acb44ca510#simple-compiler-codebases-to-study
crazy compilers good stuff

 http://gokcehan.github.io/ has some idea what he is doing; wrote lf, which
 seems to be a better ranger
https://bellard.org/otcc/
https://bellard.org/tcc/ fun

http://web.eecs.utk.edu/~azh/blog/teenytinycompiler1.html cool project for a
tiny compiler in python!

* idea

https://thetechonomics.com/2020/06/03/how-we-automated-99-of-our-newsletter-business/
automated aggregation and newsletter generation for headlines, article links,
etc

[[https://derivationmap.net/}[deriation graph of all of math physics!]]

* books

https://en.m.wikipedia.org/wiki/Words_of_Radiance
https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch/dp/1101904240
https://en.m.wikipedia.org/wiki/Range:_Why_Generalists_Triumph_in_a_Specialized_World
https://m.imdb.com/title/tt1737747/
https://www.powells.com/book/little-typer-9780262536431
https://blog.rogs.me/2020/05/de-google-my-blog-how-to-blog-in-2020-without-google/
de google the blog

https://en.m.wikipedia.org/wiki/Literate_programming -- practice literate
programming in daily life.

https://moviebarcode.tumblr.com/ cool looks

[[http://lisperator.net/blog/queen-chess-fast-lisp/][queens]]
[[http://lisperator.net/blog/a-little-javascript-problem/][js problem]]
[[http://lisperator.net/blog/pull-request-based-development-sucks/][pr based dev]]
[[http://lisperator.net/blog/gazing-at-the-numbers-the-collatz-sequence/][collatz seq]]
[[http://lisperator.net/blog/the-left-pad-case/][leftpad]]
[[http://lisperator.net/blog/minesweeper-and-interviewing/][minesweeper and interviewing]]
https://www.datprotocol.com/ hypermedia protocol!
